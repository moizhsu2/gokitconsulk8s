// Code generated by protoc-gen-go. DO NOT EDIT.
// source: producersvc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	A                    int64    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1344c2ca512e63, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *SumRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type SumReply struct {
	Rs                   int64    `protobuf:"varint,1,opt,name=rs,proto3" json:"rs,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumReply) Reset()         { *m = SumReply{} }
func (m *SumReply) String() string { return proto.CompactTextString(m) }
func (*SumReply) ProtoMessage()    {}
func (*SumReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1344c2ca512e63, []int{1}
}

func (m *SumReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumReply.Unmarshal(m, b)
}
func (m *SumReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumReply.Marshal(b, m, deterministic)
}
func (m *SumReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumReply.Merge(m, src)
}
func (m *SumReply) XXX_Size() int {
	return xxx_messageInfo_SumReply.Size(m)
}
func (m *SumReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SumReply.DiscardUnknown(m)
}

var xxx_messageInfo_SumReply proto.InternalMessageInfo

func (m *SumReply) GetRs() int64 {
	if m != nil {
		return m.Rs
	}
	return 0
}

func (m *SumReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type ConcatRequest struct {
	A                    string   `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    string   `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConcatRequest) Reset()         { *m = ConcatRequest{} }
func (m *ConcatRequest) String() string { return proto.CompactTextString(m) }
func (*ConcatRequest) ProtoMessage()    {}
func (*ConcatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1344c2ca512e63, []int{2}
}

func (m *ConcatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConcatRequest.Unmarshal(m, b)
}
func (m *ConcatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConcatRequest.Marshal(b, m, deterministic)
}
func (m *ConcatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConcatRequest.Merge(m, src)
}
func (m *ConcatRequest) XXX_Size() int {
	return xxx_messageInfo_ConcatRequest.Size(m)
}
func (m *ConcatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConcatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConcatRequest proto.InternalMessageInfo

func (m *ConcatRequest) GetA() string {
	if m != nil {
		return m.A
	}
	return ""
}

func (m *ConcatRequest) GetB() string {
	if m != nil {
		return m.B
	}
	return ""
}

type ConcatReply struct {
	Rs                   string   `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConcatReply) Reset()         { *m = ConcatReply{} }
func (m *ConcatReply) String() string { return proto.CompactTextString(m) }
func (*ConcatReply) ProtoMessage()    {}
func (*ConcatReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1344c2ca512e63, []int{3}
}

func (m *ConcatReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConcatReply.Unmarshal(m, b)
}
func (m *ConcatReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConcatReply.Marshal(b, m, deterministic)
}
func (m *ConcatReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConcatReply.Merge(m, src)
}
func (m *ConcatReply) XXX_Size() int {
	return xxx_messageInfo_ConcatReply.Size(m)
}
func (m *ConcatReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConcatReply.DiscardUnknown(m)
}

var xxx_messageInfo_ConcatReply proto.InternalMessageInfo

func (m *ConcatReply) GetRs() string {
	if m != nil {
		return m.Rs
	}
	return ""
}

func (m *ConcatReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type ProduceRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProduceRequest) Reset()         { *m = ProduceRequest{} }
func (m *ProduceRequest) String() string { return proto.CompactTextString(m) }
func (*ProduceRequest) ProtoMessage()    {}
func (*ProduceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1344c2ca512e63, []int{4}
}

func (m *ProduceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProduceRequest.Unmarshal(m, b)
}
func (m *ProduceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProduceRequest.Marshal(b, m, deterministic)
}
func (m *ProduceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProduceRequest.Merge(m, src)
}
func (m *ProduceRequest) XXX_Size() int {
	return xxx_messageInfo_ProduceRequest.Size(m)
}
func (m *ProduceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProduceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProduceRequest proto.InternalMessageInfo

func (m *ProduceRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *ProduceRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type ProduceReply struct {
	Rs                   string   `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProduceReply) Reset()         { *m = ProduceReply{} }
func (m *ProduceReply) String() string { return proto.CompactTextString(m) }
func (*ProduceReply) ProtoMessage()    {}
func (*ProduceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1344c2ca512e63, []int{5}
}

func (m *ProduceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProduceReply.Unmarshal(m, b)
}
func (m *ProduceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProduceReply.Marshal(b, m, deterministic)
}
func (m *ProduceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProduceReply.Merge(m, src)
}
func (m *ProduceReply) XXX_Size() int {
	return xxx_messageInfo_ProduceReply.Size(m)
}
func (m *ProduceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ProduceReply.DiscardUnknown(m)
}

var xxx_messageInfo_ProduceReply proto.InternalMessageInfo

func (m *ProduceReply) GetRs() string {
	if m != nil {
		return m.Rs
	}
	return ""
}

func (m *ProduceReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "pb.SumRequest")
	proto.RegisterType((*SumReply)(nil), "pb.SumReply")
	proto.RegisterType((*ConcatRequest)(nil), "pb.ConcatRequest")
	proto.RegisterType((*ConcatReply)(nil), "pb.ConcatReply")
	proto.RegisterType((*ProduceRequest)(nil), "pb.ProduceRequest")
	proto.RegisterType((*ProduceReply)(nil), "pb.ProduceReply")
}

func init() { proto.RegisterFile("producersvc.proto", fileDescriptor_db1344c2ca512e63) }

var fileDescriptor_db1344c2ca512e63 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0x4d, 0x8b, 0xd3, 0x7e, 0xab, 0x75, 0x3b, 0x78, 0x31, 0x7a, 0x25, 0x01, 0x61, 0xa0,
	0xd4, 0x7f, 0x37, 0xde, 0xfb, 0x02, 0xa3, 0x7b, 0x82, 0xa6, 0x96, 0x21, 0xac, 0x26, 0x26, 0xad,
	0xb0, 0x27, 0xf1, 0x75, 0x25, 0x49, 0xbb, 0x19, 0x44, 0xd8, 0x5d, 0xbe, 0x73, 0xbe, 0xef, 0x77,
	0x38, 0x27, 0x98, 0x2b, 0x2d, 0xdf, 0xfa, 0xba, 0xd1, 0xe6, 0xab, 0x2e, 0x94, 0x96, 0x9d, 0xa4,
	0x48, 0x09, 0xbe, 0x04, 0xd6, 0x7d, 0x5b, 0x36, 0x9f, 0x7d, 0x63, 0x3a, 0x4a, 0xc1, 0xaa, 0x05,
	0xbb, 0x66, 0xcb, 0xb8, 0x64, 0x95, 0x55, 0x62, 0x11, 0x79, 0x25, 0xf8, 0x1d, 0xce, 0x9d, 0x53,
	0x6d, 0x77, 0x94, 0x21, 0xd2, 0x66, 0x30, 0x46, 0xda, 0xd0, 0x0c, 0x71, 0xa3, 0xb5, 0xf3, 0x26,
	0xa5, 0x7d, 0xf2, 0x5b, 0x5c, 0xbc, 0xca, 0x8f, 0xba, 0xea, 0xfe, 0xa0, 0x93, 0x00, 0x9d, 0x58,
	0xf4, 0x3d, 0xa6, 0xa3, 0x39, 0xa4, 0x27, 0xff, 0xd0, 0x5f, 0x90, 0xad, 0xfc, 0x3a, 0x23, 0xfe,
	0x0a, 0xa7, 0x9d, 0x54, 0xef, 0xf5, 0x10, 0xf3, 0xc2, 0x26, 0x5b, 0xb3, 0x19, 0x93, 0xad, 0xd9,
	0xf0, 0x07, 0xa4, 0xfb, 0xe4, 0x51, 0xb3, 0x9e, 0xbe, 0x19, 0xa6, 0xab, 0xc3, 0xed, 0xe8, 0x06,
	0xf1, 0xba, 0x6f, 0x29, 0x2b, 0x94, 0x28, 0x0e, 0xa7, 0xcb, 0xd3, 0xbd, 0x56, 0xdb, 0x1d, 0x3f,
	0xa1, 0x02, 0x13, 0xbf, 0x13, 0xcd, 0x6d, 0x27, 0x38, 0x46, 0x7e, 0xf9, 0xbb, 0xe4, 0xfd, 0x8f,
	0x38, 0x1b, 0xa6, 0x10, 0xd9, 0x6e, 0xb8, 0x5f, 0x3e, 0x0b, 0x6a, 0x2e, 0x22, 0x26, 0xee, 0x1b,
	0x9f, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x07, 0xa4, 0x84, 0xdb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProducersvcClient is the client API for Producersvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProducersvcClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumReply, error)
	Concat(ctx context.Context, in *ConcatRequest, opts ...grpc.CallOption) (*ConcatReply, error)
	Produce(ctx context.Context, in *ProduceRequest, opts ...grpc.CallOption) (*ProduceReply, error)
}

type producersvcClient struct {
	cc *grpc.ClientConn
}

func NewProducersvcClient(cc *grpc.ClientConn) ProducersvcClient {
	return &producersvcClient{cc}
}

func (c *producersvcClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumReply, error) {
	out := new(SumReply)
	err := c.cc.Invoke(ctx, "/pb.Producersvc/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *producersvcClient) Concat(ctx context.Context, in *ConcatRequest, opts ...grpc.CallOption) (*ConcatReply, error) {
	out := new(ConcatReply)
	err := c.cc.Invoke(ctx, "/pb.Producersvc/Concat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *producersvcClient) Produce(ctx context.Context, in *ProduceRequest, opts ...grpc.CallOption) (*ProduceReply, error) {
	out := new(ProduceReply)
	err := c.cc.Invoke(ctx, "/pb.Producersvc/Produce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProducersvcServer is the server API for Producersvc service.
type ProducersvcServer interface {
	Sum(context.Context, *SumRequest) (*SumReply, error)
	Concat(context.Context, *ConcatRequest) (*ConcatReply, error)
	Produce(context.Context, *ProduceRequest) (*ProduceReply, error)
}

// UnimplementedProducersvcServer can be embedded to have forward compatible implementations.
type UnimplementedProducersvcServer struct {
}

func (*UnimplementedProducersvcServer) Sum(ctx context.Context, req *SumRequest) (*SumReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedProducersvcServer) Concat(ctx context.Context, req *ConcatRequest) (*ConcatReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Concat not implemented")
}
func (*UnimplementedProducersvcServer) Produce(ctx context.Context, req *ProduceRequest) (*ProduceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Produce not implemented")
}

func RegisterProducersvcServer(s *grpc.Server, srv ProducersvcServer) {
	s.RegisterService(&_Producersvc_serviceDesc, srv)
}

func _Producersvc_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProducersvcServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Producersvc/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProducersvcServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Producersvc_Concat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConcatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProducersvcServer).Concat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Producersvc/Concat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProducersvcServer).Concat(ctx, req.(*ConcatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Producersvc_Produce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProduceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProducersvcServer).Produce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Producersvc/Produce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProducersvcServer).Produce(ctx, req.(*ProduceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Producersvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Producersvc",
	HandlerType: (*ProducersvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _Producersvc_Sum_Handler,
		},
		{
			MethodName: "Concat",
			Handler:    _Producersvc_Concat_Handler,
		},
		{
			MethodName: "Produce",
			Handler:    _Producersvc_Produce_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "producersvc.proto",
}
